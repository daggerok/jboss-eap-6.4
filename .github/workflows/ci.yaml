name: CI
on:
  push:
    branches: [master]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      trigger:
        description: Trigger manual test jobs
        required: false
        default: ''
      push:
        description: Trigger Docker build and publish
        required: false
        default: ''
jobs:
  test-Dockerfile:
    if: github.event.inputs.push == ''
      && github.event.inputs.trigger == ''
    name: Test Dockerfile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: publish-id
      with:
        path: |
          ~/.m2
          ~/.docker
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/Dockerfile*') }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: daggerok
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract metadata (tags, labels) for Docker
      uses: docker/metadata-action@v3
      id: meta
      with:
        images: daggerok/${{ github.event.repository.name }}
        flavor: |
          latest=true
    - name: Build and push docker image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: false
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        #tags: daggerok/${{ github.event.repository.name }}:latest
    - run: docker run -d -p 8080:8080 --rm --name my-app daggerok/${{ github.event.repository.name }}:latest
    - run: sleep 5s
    - run: docker exec -i my-app ash -c 'touch /home/jboss/jboss-eap-6.4/standalone/deployments/app.war.skipdeploy'
    - run: docker exec -i my-app ash -c 'mkdir -p /home/jboss/jboss-eap-6.4/standalone/deployments/app.war'
    - run: docker exec -i my-app ash -c 'echo "<html><body><h1>Hello</h1></body></html>" > /home/jboss/jboss-eap-6.4/standalone/deployments/app.war/index.html'
    - run: docker exec -i my-app ash -c 'touch /home/jboss/jboss-eap-6.4/standalone/deployments/app.war.dodeploy'
    - run: sleep 5s
    - run: curl -sS 0:8080/app/
    - run: docker stop my-app
  test-alpine-Dockerfile:
    if: startsWith(github.event.inputs.trigger, 'y')
      || startsWith(github.event.inputs.trigger, 'Y')
    name: Test Dockerfile.alpine
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: publish-id
      with:
        path: |
          ~/.m2
          ~/.docker
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/Dockerfile*') }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: daggerok
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract metadata (tags, labels) for Docker
      uses: docker/metadata-action@v3
      id: meta
      with:
        images: daggerok/${{ github.event.repository.name }}
        flavor: |
          latest=true
    - name: Build and push docker image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.alpine
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - run: docker run -d -p 8080:8080 --rm --name my-app daggerok/${{ github.event.repository.name }}:latest
    - run: sleep 5s
    - run: docker exec -i my-app ash -c 'touch /home/jboss/jboss-eap-6.4/standalone/deployments/app.war.skipdeploy'
    - run: docker exec -i my-app ash -c 'mkdir -p /home/jboss/jboss-eap-6.4/standalone/deployments/app.war'
    - run: docker exec -i my-app ash -c 'echo "<html><body><h1>Hello</h1></body></html>" > /home/jboss/jboss-eap-6.4/standalone/deployments/app.war/index.html'
    - run: docker exec -i my-app ash -c 'touch /home/jboss/jboss-eap-6.4/standalone/deployments/app.war.dodeploy'
    - run: sleep 5s
    - run: curl -sS 0:8080/app/
    - run: docker stop my-app
  test-centos-Dockerfile:
    if: startsWith(github.event.inputs.trigger, 'y')
      || startsWith(github.event.inputs.trigger, 'Y')
    name: Test Dockerfile.centos
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: publish-id
      with:
        path: |
          ~/.m2
          ~/.docker
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/Dockerfile*') }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: daggerok
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract metadata (tags, labels) for Docker
      uses: docker/metadata-action@v3
      id: meta
      with:
        images: daggerok/${{ github.event.repository.name }}
        flavor: |
          latest=true
    - name: Build and push docker image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.centos
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - run: docker run -d -p 8080:8080 --rm --name my-app daggerok/${{ github.event.repository.name }}:latest
    - run: sleep 5s
    - run: docker exec -i my-app ash -c 'touch /home/jboss/jboss-eap-6.4/standalone/deployments/app.war.skipdeploy'
    - run: docker exec -i my-app ash -c 'mkdir -p /home/jboss/jboss-eap-6.4/standalone/deployments/app.war'
    - run: docker exec -i my-app ash -c 'echo "<html><body><h1>Hello</h1></body></html>" > /home/jboss/jboss-eap-6.4/standalone/deployments/app.war/index.html'
    - run: docker exec -i my-app ash -c 'touch /home/jboss/jboss-eap-6.4/standalone/deployments/app.war.dodeploy'
    - run: sleep 5s
    - run: curl -sS 0:8080/app/
    - run: docker stop my-app
  build-alpine-Dockerfile-and-push-to-docker-hub-registry:
    if: startsWith(github.event.inputs.push, 'y')
      || startsWith(github.event.inputs.push, 'Y')
    name: Build and Push Alpine Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: publish-id
      with:
        path: |
          ~/.m2
          ~/.docker
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/Dockerfile*') }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: daggerok
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract metadata (tags, labels) for Docker
      uses: docker/metadata-action@v3
      id: meta
      with:
        images: daggerok/${{ github.event.repository.name }}
    - name: Build and push docker image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.alpine
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  build-centos-Dockerfile-and-push-to-docker-hub-registry:
    if: startsWith(github.event.inputs.push, 'y')
      || startsWith(github.event.inputs.push, 'Y')
    name: Build and Push CentOS Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: publish-id
      with:
        path: |
          ~/.m2
          ~/.docker
          !~/.m2/repository/com/gituhb/daggerok
        key: ${{ runner.os }}-${{ hashFiles('**/Dockerfile*') }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: daggerok
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract metadata (tags, labels) for Docker
      uses: docker/metadata-action@v3
      id: meta
      with:
        images: daggerok/${{ github.event.repository.name }}
    - name: Build and push docker image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.centos
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
